package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.39

import (
	"context"
	"os"

	"github.com/kobaryubi/go-todo/graph/model"
)

// Todos is the resolver for the todos field.
func (r *queryResolver) Todos(ctx context.Context) ([]*model.Todo, error) {
	rows, err := r.pool.Query(context.Background(), "SELECT id FROM todos")
	if err != nil {
		os.Exit(1)
	}

	defer rows.Close()

	var todos []*model.Todo

	for rows.Next() {
		var todo *model.Todo
		err := rows.Scan(&todo.ID)
		if err != nil {
			continue
		}

		todos = append(todos, todo)
	}

	if rows.Err() != nil {
		os.Exit(1)
	}
	
	return todos, nil
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
